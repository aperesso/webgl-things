{"ast":null,"code":"import * as THREE from 'three';\nimport settings from './settings';\nimport './index.css';\n\nconst App = function () {\n  this.scene = null;\n  this.camera = null;\n  this.renderer = null;\n\n  this.setup = function () {\n    const CAMERA_SETTINGS = settings.CAMERA_SETTINGS;\n\n    const _this$getDimensions = this.getDimensions(),\n          width = _this$getDimensions.width,\n          height = _this$getDimensions.height;\n\n    const canvas = document.getElementById(\"canvas\");\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(CAMERA_SETTINGS.fov, width / height, CAMERA_SETTINGS.near, CAMERA_SETTINGS.far);\n    scene.background = new THREE.Color('red');\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      canvas,\n      alpha: true\n    });\n    renderer.setSize(width, height);\n    renderer.clearColor(new THREE.Color(0xffffff), 0.0);\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer;\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  this.getDimensions = function () {\n    const canvas = document.getElementById(\"canvas\");\n\n    const _canvas$getBoundingCl = canvas.getBoundingClientRect(),\n          width = _canvas$getBoundingCl.width,\n          height = _canvas$getBoundingCl.height;\n\n    return {\n      width,\n      height\n    };\n  };\n\n  this.play = function () {};\n};\n\nconst app = new App();\napp.setup();","map":{"version":3,"sources":["/Users/alexiaperesson/webgl-things/src/index.js"],"names":["THREE","settings","App","scene","camera","renderer","setup","CAMERA_SETTINGS","getDimensions","width","height","canvas","document","getElementById","Scene","PerspectiveCamera","fov","near","far","background","Color","WebGLRenderer","antialias","alpha","setSize","clearColor","render","getBoundingClientRect","play","app"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAsB,YAAtB;AAEA,OAAO,aAAP;;AAEA,MAAMC,GAAG,GAAG,YAAW;AAErB,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,MAAL,GAAc,IAAd;AACA,OAAKC,QAAL,GAAgB,IAAhB;;AAEA,OAAKC,KAAL,GAAa,YAAW;AAAA,UACdC,eADc,GACMN,QADN,CACdM,eADc;;AAAA,gCAEK,KAAKC,aAAL,EAFL;AAAA,UAEdC,KAFc,uBAEdA,KAFc;AAAA,UAENC,MAFM,uBAENA,MAFM;;AAGtB,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AAEA,UAAMV,KAAK,GAAG,IAAIH,KAAK,CAACc,KAAV,EAAd;AAEA,UAAMV,MAAM,GAAG,IAAIJ,KAAK,CAACe,iBAAV,CACbR,eAAe,CAACS,GADH,EAEbP,KAAK,GAAGC,MAFK,EAGbH,eAAe,CAACU,IAHH,EAIbV,eAAe,CAACW,GAJH,CAAf;AAOAf,IAAAA,KAAK,CAACgB,UAAN,GAAmB,IAAInB,KAAK,CAACoB,KAAV,CAAiB,KAAjB,CAAnB;AAEA,UAAMf,QAAQ,GAAG,IAAIL,KAAK,CAACqB,aAAV,CAAwB;AAACC,MAAAA,SAAS,EAAG,IAAb;AAAmBX,MAAAA,MAAnB;AAA2BY,MAAAA,KAAK,EAAE;AAAlC,KAAxB,CAAjB;AACAlB,IAAAA,QAAQ,CAACmB,OAAT,CAAiBf,KAAjB,EAAwBC,MAAxB;AACAL,IAAAA,QAAQ,CAACoB,UAAT,CAAoB,IAAIzB,KAAK,CAACoB,KAAV,CAAgB,QAAhB,CAApB,EAA+C,GAA/C;AAGA,SAAKjB,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKA,QAAL,CAAcqB,MAAd,CAAqB,KAAKvB,KAA1B,EAAiC,KAAKC,MAAtC;AACD,GAzBD;;AA4BA,OAAKI,aAAL,GAAqB,YAAW;AAC9B,UAAMG,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;;AAD8B,kCAEHF,MAAM,CAACgB,qBAAP,EAFG;AAAA,UAEtBlB,KAFsB,yBAEtBA,KAFsB;AAAA,UAEdC,MAFc,yBAEdA,MAFc;;AAG9B,WAAO;AAACD,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAP;AACD,GAJD;;AAMA,OAAKkB,IAAL,GAAY,YAAW,CAEtB,CAFD;AAID,CA5CD;;AA8CA,MAAMC,GAAG,GAAG,IAAI3B,GAAJ,EAAZ;AACA2B,GAAG,CAACvB,KAAJ","sourcesContent":["import * as THREE from 'three';\nimport settings  from './settings';\n\nimport './index.css';\n\nconst App = function() {\n\n  this.scene = null;\n  this.camera = null;\n  this.renderer = null;\n\n  this.setup = function() {\n    const { CAMERA_SETTINGS } = settings;\n    const { width , height } = this.getDimensions();\n    const canvas = document.getElementById(\"canvas\");\n\n    const scene = new THREE.Scene();\n\n    const camera = new THREE.PerspectiveCamera(\n      CAMERA_SETTINGS.fov,\n      width / height,\n      CAMERA_SETTINGS.near,\n      CAMERA_SETTINGS.far\n    )\n\n    scene.background = new THREE.Color( 'red' );\n\n    const renderer = new THREE.WebGLRenderer({antialias : true, canvas, alpha: true});\n    renderer.setSize(width, height);\n    renderer.clearColor(new THREE.Color(0xffffff), 0.0);\n    \n\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer;\n    this.renderer.render(this.scene, this.camera)\n  }\n\n\n  this.getDimensions = function() {\n    const canvas = document.getElementById(\"canvas\");\n    const { width , height } = canvas.getBoundingClientRect();\n    return {width, height}\n  }\n\n  this.play = function() {\n    \n  }\n\n}\n\nconst app = new App();\napp.setup();"]},"metadata":{},"sourceType":"module"}