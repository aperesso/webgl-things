{"ast":null,"code":"import * as THREE from 'three';\nimport { colorToShader } from '../utils';\nconst DEFAULT_SETTINGS = {\n  ambient: [255, 255, 255],\n  diffuse: [255, 255, 255],\n  specular: [255, 255, 255],\n  position: new THREE.Vector3(0, -40, 0)\n};\n\nclass Light {\n  constructor(label = \"Light\") {\n    this.label = label;\n    this.ambient = DEFAULT_SETTINGS.ambient;\n    this.diffuse = DEFAULT_SETTINGS.diffuse;\n    this.specular = DEFAULT_SETTINGS.specular;\n    this.position = DEFAULT_SETTINGS.position;\n  }\n\n}\n\nLight.prototype.setGui = function (controller) {\n  const lightController = controller.addFolder(this.label);\n  lightController.addColor(this, 'ambient');\n  lightController.addColor(this, 'diffuse');\n  lightController.addColor(this, 'specular');\n  const lightPositionController = lightController.addFolder(\"Position\");\n  lightPositionController.add(this.position, 'x', -100, 100);\n  lightPositionController.add(this.position, 'y', -100, 100);\n  lightPositionController.add(this.position, 'z', -100, 100);\n};\n\nLight.prototype.getUniforms = function () {\n  return {\n    [\"u\".concat(this.label, \"Ambient\")]: {\n      value: colorToShader(this.ambient)\n    },\n    [\"u\".concat(this.label, \"Diffuse\")]: {\n      value: colorToShader(this.diffuse)\n    },\n    [\"u\".concat(this.label, \"Specular\")]: {\n      value: colorToShader(this.specular)\n    },\n    [\"u\".concat(this.label, \"Position\")]: {\n      value: this.position\n    }\n  };\n};\n\nLight.prototype.setUniforms = function (material) {\n  material.uniforms[\"u\".concat(this.label, \"Ambient\")].value = colorToShader(this.ambient);\n  material.uniforms[\"u\".concat(this.label, \"Diffuse\")].value = colorToShader(this.diffuse);\n  material.uniforms[\"u\".concat(this.label, \"Specular\")].value = colorToShader(this.specular);\n  material.uniforms[\"u\".concat(this.label, \"Position\")].value = this.position;\n};\n\nexport default Light;","map":{"version":3,"sources":["/Users/alexiaperesson/webgl-things/src/classes/Light.js"],"names":["THREE","colorToShader","DEFAULT_SETTINGS","ambient","diffuse","specular","position","Vector3","Light","constructor","label","prototype","setGui","controller","lightController","addFolder","addColor","lightPositionController","add","getUniforms","value","setUniforms","material","uniforms"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\n\nimport { colorToShader } from '../utils';\n\nconst DEFAULT_SETTINGS = {\n    ambient : [255,255,255],\n    diffuse : [255,255,255],\n    specular : [255,255,255],\n \n    position : new THREE.Vector3(0,-40,0),\n}\n\nclass Light {\n    constructor(label = \"Light\") {\n        this.label = label;\n        this.ambient = DEFAULT_SETTINGS.ambient;\n        this.diffuse = DEFAULT_SETTINGS.diffuse;\n        this.specular = DEFAULT_SETTINGS.specular;\n        this.position = DEFAULT_SETTINGS.position;\n    }\n}\n\nLight.prototype.setGui = function(controller) {\n    const lightController = controller.addFolder(this.label);\n    lightController.addColor(this, 'ambient');\n    lightController.addColor(this, 'diffuse');\n    lightController.addColor(this, 'specular');\n    const lightPositionController = lightController.addFolder(\"Position\");\n    lightPositionController.add(this.position, 'x', -100, 100);\n    lightPositionController.add(this.position, 'y', -100, 100);\n    lightPositionController.add(this.position, 'z', -100, 100);\n}\n\nLight.prototype.getUniforms = function() {\n    return {\n        [`u${this.label}Ambient`] : { value : colorToShader(this.ambient) },\n        [`u${this.label}Diffuse`] : { value : colorToShader(this.diffuse) },\n        [`u${this.label}Specular`] : { value : colorToShader(this.specular) },\n        [`u${this.label}Position`] : { value : this.position }\n    }\n} \n\nLight.prototype.setUniforms = function(material) {\n    material.uniforms[`u${this.label}Ambient`].value = colorToShader(this.ambient);\n    material.uniforms[`u${this.label}Diffuse`].value = colorToShader(this.diffuse);\n    material.uniforms[`u${this.label}Specular`].value = colorToShader(this.specular);\n    material.uniforms[`u${this.label}Position`].value = this.position;\n}\n\nexport default Light;"]},"metadata":{},"sourceType":"module"}