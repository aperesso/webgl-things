{"ast":null,"code":"import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport Sphere from './scene/Sphere';\nimport Background from './scene/Background';\nimport { CAMERA_SETTINGS, LIGHT_SETTINGS } from './settings';\nimport './index.css';\n\nconst App = function () {\n  this.setup = async function () {\n    const _this$getDimensions = this.getDimensions(),\n          width = _this$getDimensions.width,\n          height = _this$getDimensions.height;\n\n    const canvas = document.getElementById(\"canvas\");\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(CAMERA_SETTINGS.fov, width / height, CAMERA_SETTINGS.near, CAMERA_SETTINGS.far);\n    camera.position.set(0, 0, 30);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      canvas,\n      alpha: true\n    });\n    renderer.setSize(width, height);\n    renderer.shadowMap.enabled = true;\n    renderer.gammaFactor = 2.2;\n    renderer.gammaOutput = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap; // renderer.physicallyCorrectLights = true;\n\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer; // this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n  };\n\n  this.lightUpScene = function () {\n    const ambient = LIGHT_SETTINGS.ambient,\n          diffuse = LIGHT_SETTINGS.diffuse,\n          ambientIntensity = LIGHT_SETTINGS.ambientIntensity,\n          diffuseIntensity = LIGHT_SETTINGS.diffuseIntensity,\n          position = LIGHT_SETTINGS.position;\n    const ambientLight = new THREE.AmbientLight(ambient, ambientIntensity);\n    this.scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(diffuse, diffuseIntensity);\n    directionalLight.position.copy(position);\n    directionalLight.shadow.mapSize.width = 2048;\n    directionalLight.shadow.mapSize.height = 2048;\n    directionalLight.shadow.camera.left = -10;\n    directionalLight.shadow.camera.right = 10;\n    directionalLight.shadow.camera.top = -10;\n    directionalLight.shadow.camera.bottom = 10;\n    directionalLight.castShadow = true;\n    this.scene.add(directionalLight);\n  };\n\n  this.load = async function () {\n    this.sphere = new Sphere();\n    await this.sphere.setMesh();\n    this.scene.add(this.sphere.mesh);\n    this.background = new Background();\n    this.scene.add(this.background.mesh);\n  };\n\n  this.getDimensions = function () {\n    const canvas = document.getElementById(\"canvas\");\n\n    const _canvas$getBoundingCl = canvas.getBoundingClientRect(),\n          width = _canvas$getBoundingCl.width,\n          height = _canvas$getBoundingCl.height;\n\n    return {\n      width,\n      height\n    };\n  };\n\n  this.loop = function () {\n    this.renderer.setAnimationLoop(() => {\n      this.sphere.animate();\n      this.renderer.render(this.scene, this.camera);\n    });\n  };\n};\n\ndebugger;\nconst app = new App();\napp.setup();\napp.lightUpScene();\napp.load();\napp.loop();","map":{"version":3,"sources":["/Users/alexiaperesson/webgl-things/src/index.js"],"names":["THREE","OrbitControls","Sphere","Background","CAMERA_SETTINGS","LIGHT_SETTINGS","App","setup","getDimensions","width","height","canvas","document","getElementById","scene","Scene","camera","PerspectiveCamera","fov","near","far","position","set","renderer","WebGLRenderer","antialias","alpha","setSize","shadowMap","enabled","gammaFactor","gammaOutput","type","PCFSoftShadowMap","lightUpScene","ambient","diffuse","ambientIntensity","diffuseIntensity","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","copy","shadow","mapSize","left","right","top","bottom","castShadow","load","sphere","setMesh","mesh","background","getBoundingClientRect","loop","setAnimationLoop","animate","render","app"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport Sphere from './scene/Sphere';\nimport Background from './scene/Background';\n\nimport { CAMERA_SETTINGS , LIGHT_SETTINGS }  from './settings';\n\nimport './index.css';\n\nconst App = function() {\n\n\n  this.setup = async function() {\n    const { width , height } = this.getDimensions();\n    const canvas = document.getElementById(\"canvas\");\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      CAMERA_SETTINGS.fov,\n      width / height,\n      CAMERA_SETTINGS.near,\n      CAMERA_SETTINGS.far)\n    camera.position.set(0,0, 30);\n\n    const renderer = new THREE.WebGLRenderer({antialias : true, canvas, alpha: true});\n    renderer.setSize(width, height);\n    renderer.shadowMap.enabled = true;\n    renderer.gammaFactor = 2.2;\n    renderer.gammaOutput = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    // renderer.physicallyCorrectLights = true;\n\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer;\n    // this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n  }\n\n  this.lightUpScene = function() {\n    \n    const { ambient , diffuse , ambientIntensity, diffuseIntensity , position } = LIGHT_SETTINGS;\n\n    const ambientLight = new THREE.AmbientLight(ambient, ambientIntensity);\n    this.scene.add(ambientLight);\n\n    const directionalLight = new THREE.DirectionalLight(diffuse, diffuseIntensity)\n    directionalLight.position.copy(position);\n\n\n    directionalLight.shadow.mapSize.width = 2048;  \n    directionalLight.shadow.mapSize.height = 2048; \n    directionalLight.shadow.camera.left = -10;\n    directionalLight.shadow.camera.right = 10;\n    directionalLight.shadow.camera.top = -10;\n    directionalLight.shadow.camera.bottom = 10; \n\n\n    directionalLight.castShadow = true;\n\n\n    this.scene.add(directionalLight);\n  }\n\n  this.load = async function() {\n    this.sphere = new Sphere();\n    await this.sphere.setMesh();\n    this.scene.add(this.sphere.mesh);\n\n    \n    this.background = new Background();\n    this.scene.add(this.background.mesh);\n  }\n\n  this.getDimensions = function() {\n    const canvas = document.getElementById(\"canvas\");\n    const { width , height } = canvas.getBoundingClientRect();\n    return {width, height}\n  }\n\n  this.loop = function() {\n    this.renderer.setAnimationLoop(() => {\n        this.sphere.animate();\n        this.renderer.render(this.scene, this.camera)\n      }\n    )\n  }\n\n}\n\ndebugger;\nconst app = new App();\napp.setup();\napp.lightUpScene();\napp.load();\napp.loop()\n"]},"metadata":{},"sourceType":"module"}