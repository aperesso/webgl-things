{"ast":null,"code":"import * as THREE from 'three';\n\nclass Particle {\n  constructor(areaSize) {\n    this.areaSize = areaSize;\n    this.position = new THREE.Vector3(THREE.Math.randFloatSpread(areaSize), THREE.Math.randFloatSpread(areaSize), THREE.Math.randFloatSpread(areaSize));\n    this.velocity = new THREE.Vector3(THREE.Math.randFloatSpread(0.2), THREE.Math.randFloatSpread(0.2), THREE.Math.randFloatSpread(0.2));\n    this.acceleration = new THREE.Vector3(0, 0, 0);\n  }\n\n}\n\nParticle.prototype.applyForce = function (force) {\n  this.acceleration.add(force);\n}; // const origin = new THREE.Vecto r3(0,0,0);\n\n\nParticle.prototype.checkEdge = function () {\n  Object.keys(this.position).forEach(i => {\n    if (this.position[i] < -this.areaSize / 2 || this.position[i > this.areaSize / 2]) this.position[i] = THREE.Math.randFloatSpread(1);\n  });\n};\n\nParticle.prototype.animate = function () {\n  this.velocity.add(this.acceleration);\n  this.position.add(this.velocity);\n  this.checkEdge();\n  this.acceleration.multiplyScalar(0);\n};\n\nexport default Particle;","map":{"version":3,"sources":["/Users/alexiaperesson/webgl-things/src/classes/Particle.js"],"names":["THREE","Particle","constructor","areaSize","position","Vector3","Math","randFloatSpread","velocity","acceleration","prototype","applyForce","force","add","checkEdge","Object","keys","forEach","i","animate","multiplyScalar"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgB,IAAIJ,KAAK,CAACK,OAAV,CACZL,KAAK,CAACM,IAAN,CAAWC,eAAX,CAA2BJ,QAA3B,CADY,EAEZH,KAAK,CAACM,IAAN,CAAWC,eAAX,CAA2BJ,QAA3B,CAFY,EAGZH,KAAK,CAACM,IAAN,CAAWC,eAAX,CAA2BJ,QAA3B,CAHY,CAAhB;AAKA,SAAKK,QAAL,GAAgB,IAAIR,KAAK,CAACK,OAAV,CACZL,KAAK,CAACM,IAAN,CAAWC,eAAX,CAA2B,GAA3B,CADY,EAEZP,KAAK,CAACM,IAAN,CAAWC,eAAX,CAA2B,GAA3B,CAFY,EAGZP,KAAK,CAACM,IAAN,CAAWC,eAAX,CAA2B,GAA3B,CAHY,CAAhB;AAKA,SAAKE,YAAL,GAAoB,IAAIT,KAAK,CAACK,OAAV,CAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,CAApB;AACH;;AAdU;;AAiBfJ,QAAQ,CAACS,SAAT,CAAmBC,UAAnB,GAAgC,UAASC,KAAT,EAAgB;AAC5C,OAAKH,YAAL,CAAkBI,GAAlB,CAAsBD,KAAtB;AACH,CAFD,C,CAKA;;;AACAX,QAAQ,CAACS,SAAT,CAAmBI,SAAnB,GAA+B,YAAW;AACtCC,EAAAA,MAAM,CAACC,IAAP,CAAY,KAAKZ,QAAjB,EAA2Ba,OAA3B,CAAmCC,CAAC,IAAI;AACpC,QAAI,KAAKd,QAAL,CAAcc,CAAd,IAAmB,CAAC,KAAKf,QAAN,GAAe,CAAlC,IAAuC,KAAKC,QAAL,CAAcc,CAAC,GAAG,KAAKf,QAAL,GAAc,CAAhC,CAA3C,EACI,KAAKC,QAAL,CAAcc,CAAd,IAAmBlB,KAAK,CAACM,IAAN,CAAWC,eAAX,CAA2B,CAA3B,CAAnB;AACP,GAHD;AAIH,CALD;;AASAN,QAAQ,CAACS,SAAT,CAAmBS,OAAnB,GAA6B,YAAW;AACpC,OAAKX,QAAL,CAAcK,GAAd,CAAkB,KAAKJ,YAAvB;AACA,OAAKL,QAAL,CAAcS,GAAd,CAAkB,KAAKL,QAAvB;AACA,OAAKM,SAAL;AACA,OAAKL,YAAL,CAAkBW,cAAlB,CAAiC,CAAjC;AACH,CALD;;AAOA,eAAenB,QAAf","sourcesContent":["import * as THREE from 'three';\n\nclass Particle {\n    constructor(areaSize) {\n        this.areaSize = areaSize;\n        this.position = new THREE.Vector3(\n            THREE.Math.randFloatSpread(areaSize),\n            THREE.Math.randFloatSpread(areaSize),\n            THREE.Math.randFloatSpread(areaSize)\n        );\n        this.velocity = new THREE.Vector3(\n            THREE.Math.randFloatSpread(0.2),\n            THREE.Math.randFloatSpread(0.2),\n            THREE.Math.randFloatSpread(0.2)\n        );\n        this.acceleration = new THREE.Vector3(0,0,0)\n    }\n}\n\nParticle.prototype.applyForce = function(force) {\n    this.acceleration.add(force);\n}\n\n\n// const origin = new THREE.Vecto r3(0,0,0);\nParticle.prototype.checkEdge = function() {\n    Object.keys(this.position).forEach(i => {\n        if (this.position[i] < -this.areaSize/2 || this.position[i > this.areaSize/2])\n            this.position[i] = THREE.Math.randFloatSpread(1)\n    })\n}\n\n\n\nParticle.prototype.animate = function() {\n    this.velocity.add(this.acceleration);\n    this.position.add(this.velocity);\n    this.checkEdge();\n    this.acceleration.multiplyScalar(0);\n}\n\nexport default Particle;"]},"metadata":{},"sourceType":"module"}