{"ast":null,"code":"import * as THREE from 'three';\nimport settings from './settings';\nimport './index.css';\n\nconst App = function () {\n  this.scene = null;\n  this.camera = null;\n  this.renderer = null;\n\n  this.setup = function () {\n    const CAMERA_SETTINGS = settings.CAMERA_SETTINGS;\n\n    const _this$getDimensions = this.getDimensions(),\n          width = _this$getDimensions.width,\n          height = _this$getDimensions.height;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(CAMERA_SETTINGS.fov, width / height, CAMERA_SETTINGS.near, CAMERA_SETTINGS.far);\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = this.setupRenderer();\n  };\n\n  this.setupRenderer = function () {\n    const _this$getDimensions2 = this.getDimensions(),\n          width = _this$getDimensions2.width,\n          height = _this$getDimensions2.height;\n\n    const canvas = document.getElementById(\"canvas\");\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      canvas\n    });\n    renderer.setSize(width, height);\n    renderer.clearColor(new THREE.Color(0xffffff), 1.0);\n    renderer.render(this.scene, this.camera);\n    return renderer;\n  };\n\n  this.getDimensions = function () {\n    const canvas = document.getElementById(\"canvas\");\n\n    const _canvas$getBoundingCl = canvas.getBoundingClientRect(),\n          width = _canvas$getBoundingCl.width,\n          height = _canvas$getBoundingCl.height;\n\n    return {\n      width,\n      height\n    };\n  };\n\n  this.play = function () {};\n};\n\nconst app = new App();\napp.setup();","map":{"version":3,"sources":["/Users/alexiaperesson/webgl-things/src/index.js"],"names":["THREE","settings","App","scene","camera","renderer","setup","CAMERA_SETTINGS","getDimensions","width","height","Scene","PerspectiveCamera","fov","near","far","setupRenderer","canvas","document","getElementById","WebGLRenderer","antialias","setSize","clearColor","Color","render","getBoundingClientRect","play","app"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAsB,YAAtB;AAEA,OAAO,aAAP;;AAEA,MAAMC,GAAG,GAAG,YAAW;AAErB,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,MAAL,GAAc,IAAd;AACA,OAAKC,QAAL,GAAgB,IAAhB;;AAEA,OAAKC,KAAL,GAAa,YAAW;AAAA,UACdC,eADc,GACMN,QADN,CACdM,eADc;;AAAA,gCAEK,KAAKC,aAAL,EAFL;AAAA,UAEdC,KAFc,uBAEdA,KAFc;AAAA,UAENC,MAFM,uBAENA,MAFM;;AAItB,UAAMP,KAAK,GAAG,IAAIH,KAAK,CAACW,KAAV,EAAd;AACA,UAAMP,MAAM,GAAG,IAAIJ,KAAK,CAACY,iBAAV,CACbL,eAAe,CAACM,GADH,EAEbJ,KAAK,GAAGC,MAFK,EAGbH,eAAe,CAACO,IAHH,EAIbP,eAAe,CAACQ,GAJH,CAAf;AAOA,SAAKZ,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgB,KAAKW,aAAL,EAAhB;AACD,GAfD;;AAiBA,OAAKA,aAAL,GAAqB,YAAW;AAAA,iCACH,KAAKR,aAAL,EADG;AAAA,UACtBC,KADsB,wBACtBA,KADsB;AAAA,UACdC,MADc,wBACdA,MADc;;AAE9B,UAAMO,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,UAAMd,QAAQ,GAAG,IAAIL,KAAK,CAACoB,aAAV,CAAwB;AAACC,MAAAA,SAAS,EAAG,IAAb;AAAmBJ,MAAAA;AAAnB,KAAxB,CAAjB;AACAZ,IAAAA,QAAQ,CAACiB,OAAT,CAAiBb,KAAjB,EAAwBC,MAAxB;AACAL,IAAAA,QAAQ,CAACkB,UAAT,CAAoB,IAAIvB,KAAK,CAACwB,KAAV,CAAgB,QAAhB,CAApB,EAA+C,GAA/C;AACAnB,IAAAA,QAAQ,CAACoB,MAAT,CAAgB,KAAKtB,KAArB,EAA4B,KAAKC,MAAjC;AACA,WAAOC,QAAP;AACD,GARD;;AAUA,OAAKG,aAAL,GAAqB,YAAW;AAC9B,UAAMS,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;;AAD8B,kCAEHF,MAAM,CAACS,qBAAP,EAFG;AAAA,UAEtBjB,KAFsB,yBAEtBA,KAFsB;AAAA,UAEdC,MAFc,yBAEdA,MAFc;;AAG9B,WAAO;AAACD,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAP;AACD,GAJD;;AAMA,OAAKiB,IAAL,GAAY,YAAW,CAEtB,CAFD;AAID,CA3CD;;AA6CA,MAAMC,GAAG,GAAG,IAAI1B,GAAJ,EAAZ;AACA0B,GAAG,CAACtB,KAAJ","sourcesContent":["import * as THREE from 'three';\nimport settings  from './settings';\n\nimport './index.css';\n\nconst App = function() {\n\n  this.scene = null;\n  this.camera = null;\n  this.renderer = null;\n\n  this.setup = function() {\n    const { CAMERA_SETTINGS } = settings;\n    const { width , height } = this.getDimensions();\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      CAMERA_SETTINGS.fov,\n      width / height,\n      CAMERA_SETTINGS.near,\n      CAMERA_SETTINGS.far\n    )\n\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = this.setupRenderer();\n  }\n\n  this.setupRenderer = function() {\n    const { width , height } = this.getDimensions();\n    const canvas = document.getElementById(\"canvas\");\n    const renderer = new THREE.WebGLRenderer({antialias : true, canvas});\n    renderer.setSize(width, height);\n    renderer.clearColor(new THREE.Color(0xffffff), 1.0);\n    renderer.render(this.scene, this.camera)\n    return renderer;\n  }\n\n  this.getDimensions = function() {\n    const canvas = document.getElementById(\"canvas\");\n    const { width , height } = canvas.getBoundingClientRect();\n    return {width, height}\n  }\n\n  this.play = function() {\n    \n  }\n\n}\n\nconst app = new App();\napp.setup();"]},"metadata":{},"sourceType":"module"}